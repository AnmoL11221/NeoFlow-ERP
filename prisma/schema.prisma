// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  clients   Client[]
  projects  Project[]
  invoices  Invoice[]

  @@map("users")
}

model Client {
  id        String   @id @default(cuid())
  name      String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects  Project[]

  @@map("clients")
}

model Project {
  id            String        @id @default(cuid())
  name          String
  description   String        @db.Text
  status        ProjectStatus @default(PROPOSED)
  estimatedCost Float?
  actualCost    Float?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  userId   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  clientId String
  client   Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  invoices Invoice[]

  @@map("projects")
}

model Invoice {
  id            String        @id @default(cuid())
  invoiceNumber String        @unique
  status        InvoiceStatus @default(DRAFT)
  amount        Float
  issueDate     DateTime
  dueDate       DateTime
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("invoices")
}

enum ProjectStatus {
  PROPOSED
  ACTIVE
  COMPLETED
  PAUSED
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
}
